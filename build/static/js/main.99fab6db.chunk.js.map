{"version":3,"sources":["logo.svg","components/MainMenu/MainMenu.js","components/AddArticles/AddArticles.js","components/MainCard/MainCard.js","components/ViewArticles/ViewArticles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleSubmit","bind","assertThisInitialized","handleSearch","e","key","fetch","searchq","then","res","json","result","window","location","href","JSON","stringify","setState","target","value","_this2","react_default","a","createElement","style","lib","fixedHeader","title","color","label","expandable","expandableIcon","onKeyPress","onChange","onClick","changeLayout","React","Component","request","require","AddArticles","isSnackbarActive","snackbarMessage","loading","handleShowSnackbar","handleTimeoutSnackbar","handleShowLoading","message","val","query","error","response","body","console","log","parse","status","localStorage","setItem","data","alert","length","shadow","width","height","margin","expand","background","floatingLabel","autoFocus","id","showLoading","active","onTimeout","indeterminate","ViewArticles","handleQueryChange","handlePinArticle","currentQuery","p1","p2","article","prevState","currentArticles","objectSpread","defineProperty","assign","articleView","position","renderQueryList","className","renderArticleList","toReturn","block","_loop","includes","push","_this3","_ret","currentquery","contents","getItem","_loop2","date","publisher","v","_this4","_loop3","articlecontent","handleDeleteArticle","colored","name","link","text","App","Math","random","layout","components_MainMenu_MainMenu","marginBottom","components_AddArticles_AddArticles","components_ViewArticles_ViewArticles","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99fab6db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Header, Navigation, Drawer, Content, Layout, Textfield } from 'react-mdl';\n\nclass MainMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    handleSubmit(e) {\n        if (e.key === \"Enter\") {\n            fetch(\"http://localhost:5000/api/v1/search?q=\" + this.state.searchq)\n            .then(res => res.json())\n            .then(\n            (result) => {\n                window.location.href = \"inventory?data=\" + JSON.stringify(result);\n            });\n        }\n    }\n    \n    handleSearch(e) {\n        this.setState({\n            searchq: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div style={{location: \"absolute\"}}>\n                <Layout fixedHeader>\n                    <Header title={<span><span style={{ color: '#ddd' }}></span><strong>ColumnCatcher</strong></span>}>\n                        <Navigation>\n                            <Textfield\n                                label=\"Search\"\n                                expandable\n                                expandableIcon=\"search\"\n                                onKeyPress={this.handleSubmit}\n                                onChange={this.handleSearch}\n                            />\n                        </Navigation>\n                    </Header>\n                    <Drawer title=\"Menu\">\n                        <Navigation>\n                            <a onClick={() => {this.props.changeLayout(\"add\")}}>Add articles</a>\n                            <a onClick={() => {this.props.changeLayout(\"view\")}}>View articles</a>\n                            <a>More features coming soon!</a>\n                        </Navigation>\n                    </Drawer>\n                    <Content />\n                </Layout>\n            </div>\n        );\n    }\n}\n\nexport default MainMenu;","    /*global chrome*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Card, CardTitle, CardText, ProgressBar, Textfield, Snackbar } from \"react-mdl\";\nvar request = require('request');\n\nclass AddArticles extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSnackbarActive: false,\n            snackbarMessage: \"\",\n            loading: false\n        };\n        this.handleShowSnackbar = this.handleShowSnackbar.bind(this);\n        this.handleTimeoutSnackbar = this.handleTimeoutSnackbar.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleShowLoading = this.handleShowLoading.bind(this);\n    }\n\n    handleShowSnackbar(message) {\n        this.setState({\n            isSnackbarActive: true,\n            snackbarMessage: message\n        });\n    }\n\n    handleShowLoading(val) {\n        this.setState({\n            loading: val\n        });\n    }\n\n    handleTimeoutSnackbar() {\n        this.setState({\n            isSnackbarActive: false\n        });\n    }\n\n    handleSubmit(e) {\n        \n        function handleShowSnackbarS(param) {\n            this.handleShowSnackbar(param);\n        }\n        function handleShowLoadingS(param) {\n            this.handleShowLoading(param);\n        }\n        if (e.key === \"Enter\") {\n            if (e.target.value === \"\") {\n                this.handleShowSnackbar(\"Please enter a query.\");\n            } else {\n                this.handleShowSnackbar(\"Searching...\");\n                this.handleShowLoading(true);\n                var query = e.target.value;\n                request(\"http://inventt.org:5000/api/v1/searchGN?q=\" + query, function(error, response, body) {\n                    console.log(response);\n                    var result = JSON.parse(response.body);\n                    if (result.status === true) {\n                        console.log(\"saving now\");\n                        window.localStorage.setItem(query, JSON.stringify(result.data));\n                        console.log('Done.');\n                        alert(\"Saved \" + result.data.length + \" articles. :)\");\n                    } else {\n                        alert(\"There's an error. (Error code 20)\");\n                    }\n                });\n            }\n        }\n    }\n\n    get showLoading() {\n        if (this.state.loading) {\n            return <ProgressBar style={{width: \"100%\"}} indeterminate />;\n        } else{\n            return;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Card shadow={0} style={{width: '95%', height: 'auto', margin: 'auto'}}>\n                    <CardTitle expand style={{color: '#fff', background: 'url(http://www.getmdl.io/assets/demos/dog.png) bottom right 15% no-repeat #46B6AC'}}>Add articles</CardTitle>\n                    <CardText>\n                        <Textfield\n                                label=\"Query\"\n                                floatingLabel\n                                style={{width: '20%', margin: \"5%\"}}\n                                autoFocus=\"autofocus\"\n                                id=\"patrontext\"\n                                onKeyPress={this.handleSubmit}\n                            />\n                    </CardText>\n                    {this.showLoading}\n                </Card>\n\n                <Snackbar\n                active={this.state.isSnackbarActive}\n                onTimeout={this.handleTimeoutSnackbar}>\n                {this.state.snackbarMessage}\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default AddArticles;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Card, CardTitle, CardText, CardActions, Button, Textfield, Snackbar } from \"react-mdl\";\n\nclass MainCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSnackbarActive: false,\n            snackbarMessage: \"\"\n        };\n        this.handleShowSnackbar = this.handleShowSnackbar.bind(this);\n        this.handleTimeoutSnackbar = this.handleTimeoutSnackbar.bind(this);\n    }\n\n    handleShowSnackbar() {\n        this.setState({\n            isSnackbarActive: true\n        });\n    }\n\n    handleTimeoutSnackbar() {\n        this.setState({\n            isSnackbarActive: false\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Card shadow={0} style={{width: '95%', height: '320px', margin: 'auto'}}>\n                    <CardTitle expand style={{color: '#fff', background: 'url(http://www.getmdl.io/assets/demos/dog.png) bottom right 15% no-repeat #46B6AC'}}><h1>Welcome to ColumnCatcher!</h1></CardTitle>\n                    <CardText>\n                        <h1>Welcome to ColumnCatcher!</h1>\n                    </CardText>\n                </Card>\n\n                <Snackbar\n                active={this.state.isSnackbarActive}\n                onTimeout={this.handleTimeoutSnackbar}>\n                {this.state.snackbarMessage}\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default MainCard;","/*global chrome*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Card, CardTitle, CardText, Icon, FABButton, Chip, Snackbar } from \"react-mdl\";\n\nclass ViewArticles extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSnackbarActive: false,\n            snackbarMessage: \"\",\n        };\n        this.handleShowSnackbar = this.handleShowSnackbar.bind(this);\n        this.handleTimeoutSnackbar = this.handleTimeoutSnackbar.bind(this);\n        this.handleQueryChange = this.handleQueryChange.bind(this);\n        this.handlePinArticle = this.handlePinArticle.bind(this);\n    }\n\n    handleShowSnackbar(value) {\n        this.setState({\n            isSnackbarActive: true,\n            snackbarMessage: value\n        });\n    }\n\n    handleTimeoutSnackbar() {\n        this.setState({\n            isSnackbarActive: false\n        });\n    }\n\n    handleQueryChange(query) {\n        this.setState({\n            currentQuery: query\n        });\n    }\n\n    handlePinArticle (p1, p2) {\n        let article = p1;\n        let query = p2;\n        this.setState(prevState => ({\n            currentArticles: {\n                ...prevState.currentArticles,\n                [article]: query\n            }\n        }));\n    }\n\n    handleDeleteArticle (p1, p2) {\n        let article = p1;\n        let query = p2;\n        let res = Object.assign({}, this.state.currentArticles);\n        delete res[article];\n        this.setState(prevState => ({\n            currentArticles: {\n                ...res\n            }\n        }));\n        console.log(res);\n        console.log(\"Deleted \" + article + query);\n    }\n\n    get renderQueryList() {\n        var toReturn = [];\n        var block = ['length', 'key', 'getItem', 'setItem', 'removeItem', 'clear'];\n        for (let key in localStorage) {\n            if (!block.includes(key)){\n                toReturn.push(<Chip onClick={() => {this.handleQueryChange(key)}}>{key}</Chip>);\n            }\n        }\n        return toReturn;\n    }\n\n    get renderArticleList() {\n        if (this.state.currentQuery) {\n            var toReturn = [];\n            let currentquery = this.state.currentQuery;\n            let contents = JSON.parse(localStorage.getItem(currentquery));\n            toReturn.push()\n            for (let article in contents) {\n                toReturn.push(<tr onClick={() => {this.handlePinArticle(article, currentquery)}}>\n                    <th className=\"lead\">{article}</th>\n                    <th className=\"lead\">{contents[article].date !== null ? contents[article].date : \"N/A\"}</th>\n                    <th className=\"lead\">{contents[article].publisher !== null ? contents[article].publisher : \"N/A\"}</th>\n                </tr>)\n            }\n            return toReturn;\n        }else{\n            return;\n        }\n    }\n\n    get articleView() {\n        if (this.state.currentArticles) {\n            var toReturn = [];\n            for (let article in this.state.currentArticles) {\n                let query = this.state.currentArticles[article];\n                let articlecontent = localStorage.getItem(query);\n                articlecontent = JSON.parse(articlecontent);\n                toReturn.push(\n                <Card shadow={0} style={{width: '95%', height: 'auto', margin: 'auto'}}>\n                    <FABButton onClick={() => {this.handleDeleteArticle(article, query)}} colored>\n                        <Icon name=\"delete\" />\n                    </FABButton><h2>{article}</h2>\n                    <h6>{articlecontent[article].date !== null ? articlecontent[article].date : \"N/A\"}</h6>\n                    <h6>{\" Published by: \" + articlecontent[article].publisher !== null ? articlecontent[article].publisher : \"N/A\"}</h6>\n                    <p>{articlecontent[article].link !== null ? articlecontent[article].link : \"\"}</p>\n                    <p>{articlecontent[article].text !== null ? articlecontent[article].text : \"N/A\"}</p>\n                </Card>);\n            }\n            return toReturn;\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                {this.articleView}\n                <Card shadow={0} style={{width: '95%', height: 'auto', margin: 'auto'}}>\n                    <CardTitle expand style={{color: '#fff', background: 'bottom right 15% no-repeat #46B6AC'}}>View Articles</CardTitle>\n                    <CardText>\n                        <div style={{position: 'relative'}}>\n                            {this.renderQueryList}\n                            <table className=\"table table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"lead\">Article name</th>\n                                        <th className=\"lead\">Publication date</th>\n                                        <th className=\"lead\">Publisher</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.renderArticleList}\n                                </tbody>\n                            </table>\n                        </div>\n                    </CardText>\n                </Card>\n\n                <Snackbar\n                active={this.state.isSnackbarActive}\n                onTimeout={this.handleTimeoutSnackbar}>\n                {this.state.snackbarMessage}\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nexport default ViewArticles;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MainMenu from './components/MainMenu/MainMenu';\nimport MainCard from './components/MainCard/MainCard';\nimport AddArticles from \"./components/AddArticles/AddArticles\";\nimport ViewArticles from \"./components/ViewArticles/ViewArticles\";\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      active: \"main\",\n      key: Math.random()\n    };\n    this.changeLayout = this.changeLayout.bind(this);\n  }\n  changeLayout(layout) {\n    this.setState({\n      active: layout\n    });\n  }\n  render() {\n    if (this.state.active === \"main\"){\n      return (\n        <div>\n          <MainMenu changeLayout={this.changeLayout} key={Math.random()}/>\n          <br></br>\n          <h1 style={{marginBottom: \"5%\"}}></h1>\n        </div>\n      );\n    } else if (this.state.active === \"add\") {\n      return (\n        <div>\n          <MainMenu changeLayout={this.changeLayout} key={Math.random()}/>\n          <br></br>\n          <h1 style={{marginBottom: \"5%\"}}></h1>\n          <AddArticles/>\n        </div>\n      );\n    } else if (this.state.active === \"view\") {\n      return (\n        <div>\n          <MainMenu changeLayout={this.changeLayout} key={Math.random()}/>\n          <br></br>\n          <h1 style={{marginBottom: \"5%\"}}></h1>\n          <ViewArticles/>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}